<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.commoditySonAttributeMapper">
    <resultMap id="commoditySonAttributeMap" type="com.Pojo.commoditySonAttribute">
        <id column="sonAttribute_id"  property="sonAttribute_id" jdbcType="VARCHAR" javaType="string" />
        <result column="Attribute_id"  property="Attribute_id" jdbcType="VARCHAR" javaType="string" />
        <result column="Attribute_name"  property="Attribute_name" jdbcType="VARCHAR" javaType="string" />
        <result column="commodity_price"  property="commodity_price" jdbcType="DOUBLE" javaType="double" />
        <result column="commodity_number"  property="commodity_number" jdbcType="INTEGER" javaType="int" />
        <result column="commoditySonAttribute_state"  property="commoditySonAttribute_state" />
    </resultMap>

    <select id="findAllCommoditySonAttributeByid" resultType="com.Pojo.commoditySonAttribute">
        select C.sonAttribute_id,C.Attribute_id,C.Attribute_name,C.commodity_price,C.commodity_number
        from commodity A, commodityAttribute B, commoditySonAttribute C
        where A.commodity_id = #{commodity_id}
          and A.commodity_id = B.commodity_id
          and B.Attribute_id = C.Attribute_id
          and C.commoditySonAttribute_state = 1
    </select>


    <update id="updateCommoditySonAttribute"  parameterType="com.Pojo.commoditySonAttribute">
        update commoditySonAttribute
        set Attribute_id=#{Attribute_id},
            Attribute_name=#{Attribute_name},
            commodity_price=#{commodity_price},
            commodity_number=#{commodity_number}
        where    sonAttribute_id=#{sonAttribute_id}
    </update>

    <select id="queryCommoditySonAttribute" parameterType="String" resultType="com.Pojo.commoditySonAttribute">
        select * from commoditySonAttribute
        where  sonAttribute_id = #{sonAttribute_id}
    </select>

    <!--    添加商品子属性-->
    <insert id="addCommoditySonAttribute">
        SET foreign_key_checks = 0;
        insert into commoditySonAttribute(sonAttribute_id,Attribute_id,Attribute_name,commodity_price,commodity_number,commoditySonAttribute_state)
        values (#{sonAttribute_id},#{Attribute_id},#{Attribute_name},#{commodity_price},#{commodity_number},#{commoditySonAttribute_state});
        SET foreign_key_checks = 1
    </insert>

    <!-- 删除对应商品属性-->
    <update id="deleteCommoditySonAttribute"  parameterType="com.Pojo.commoditySonAttribute">
        update commoditySonAttribute
        set commoditySonAttribute_state = case when commoditySonAttribute_state= 0 then '1' else '0' end
        where sonAttribute_id = #{sonAttribute_id}
    </update>

    <!-- 更新商品子属性上架下架状态,和上面一条执行一次就反过来的情况不同-->
    <update id="updateCommoditySonAttribute_state"  parameterType="com.Pojo.commoditySonAttribute">
        update commoditySonAttribute
        set commoditySonAttribute_state = #{commoditySonAttribute_state}
        where sonAttribute_id = #{sonAttribute_id}
    </update>

    <update id="updateCommoditySonAttribute_stateByAttribute_id"  parameterType="com.Pojo.commoditySonAttribute">
        update commoditySonAttribute
        set commoditySonAttribute_state = #{commoditySonAttribute_state}
        where Attribute_id = #{Attribute_id}
    </update>

    <select id="querySonAttributeAndAttribute" resultType="com.Pojo.commoditySonAttribute">
        select * from commoditySonAttribute
        where  Attribute_id = #{Attribute_id}
          and commoditySonAttribute_state = 1
    </select>

    <select id="querySonAttributeAndAttributeState" resultMap="commoditySonAttributeMap">
        select * from commoditySonAttribute
        where  Attribute_id = #{Attribute_id}
          and commoditySonAttribute_state = 1
    </select>

    <!--通过Attribute_id真正的删除-->
    <delete id="deleteByCommoditySonAttributeForever">
        SET foreign_key_checks = 0;
        delete from commoditySonAttribute where Attribute_id = #{Attribute_id};
        SET foreign_key_checks = 1;
    </delete>

    <!--通过sonAttribute_id真正的删除-->
    <delete id="deleteByCommoditySonAttributeForeverBySonAttribute_id">
        SET foreign_key_checks = 0;
        delete from commoditySonAttribute where sonAttribute_id = #{sonAttribute_id};
        SET foreign_key_checks = 1;
    </delete>

    <!--通过Attribute_id删除对应商品子属性（改为下架状态）-->
    <update id="deleteCommoditySonAttributeByAttribute_id"  parameterType="com.Pojo.commoditySonAttribute">
        update commoditySonAttribute
        set commoditySonAttribute_state = case when commoditySonAttribute_state= 0 then '1' else '0' end
        where Attribute_id = #{Attribute_id}
    </update>


<!--    通过Attribute_id获取商品子属性表的所有sonAttribute_id-->
    <select id="getAllSonAttribute_idByAttribute_id" resultType="String">
        select sonAttribute_id
        from commoditySonAttribute
        where Attribute_id = #{Attribute_id}
    </select>

    <!--    通过Attribute_id获取商品子属性表的所有sonAttribute信息-->
    <select id="getAllCommoditySonAttributeInformationByAttribute_id" parameterType="String"  resultType="com.Pojo.commoditySonAttribute">
        select *
        from commoditySonAttribute
        where Attribute_id = #{Attribute_id}
    </select>


</mapper>